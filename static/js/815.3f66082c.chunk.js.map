{"version":3,"file":"static/js/815.3f66082c.chunk.js","mappings":"6UAoBMA,EAAkB,CACtBC,GAAI,GACJC,SAAU,IAGNC,GAAS,SAAC,IAAD,CAASC,UAAWC,EAAAA,EAAYC,gBAAc,EAACC,GAAIP,IA4GlE,UArGA,YAA0C,IAAtBQ,EAAqB,EAArBA,OAAQD,EAAa,EAAbA,GAC1B,EAAgCE,EAAAA,cAE9BC,GAFF,eAAOC,EAAP,KAAiBC,EAAjB,KAuBA,OAnBAH,EAAAA,WAAgB,YACd,iBAAC,gHAE0BI,EAAAA,EAAAA,IAAO,WAAYL,EAAQ,CAChDM,SAAU,CAAC,YAAa,eAAgB,MAAO,WAHpD,qBAEWC,EAFX,EAEWA,MAICC,OANZ,iBAOKD,EAAKE,UACLL,EAAYG,GARjB,8BAUW,IAAIG,MAAM,WAVrB,0DAaGN,EAAY,MAbf,yDAAD,KAgBC,CAACJ,KAGF,SAAC,IAAD,CACED,IAAE,kBACGA,GADH,IAEAY,SAAU,OACVC,eAAgBT,OAAWD,EAAY,WAEzCW,UAAU,6BANZ,UAQE,SAAC,IAAD,eACgBX,IAAbC,GAEC,SAAC,IAAD,CAAkBJ,GAAI,CAAEe,UAAW,YACjCX,GAEF,iCACE,SAAC,IAAD,CACEY,QAAQ,KACRnB,UAAU,KACVG,GAAI,CAAEiB,UAAW,SAAUC,GAAI,GAHjC,SAKGC,EAAAA,GAAAA,SAA0BlB,MAE7B,SAAC,IAAD,CAAKD,GAAI,CAAEoB,UAAW,EAAGC,aAAc,GAAvC,UACE,SAAC,KAAD,CACEC,QAAS,CACPC,GAAI,EACJC,GAAI,EACJC,GAAI,GAENC,QAAS,EANX,SAQGtB,EAASuB,KAAI,SAACC,GAAD,OACZ,SAAC,IAAD,WACE,SAAC,IAAD,CACEpB,KAAMoB,EAAEC,WACR5B,OAAQA,EACR6B,SAAUF,EAAEC,WAAWC,YAJjBF,EAAEG,YAWlB,UAAC,IAAD,YACE,UAAC,IAAD,CACEC,KAAK,QACLC,KAAK,+CACLC,OAAO,SACPC,IAAI,WACJnB,QAAQ,WALV,UAOGG,EAAAA,GAAAA,eAAgClB,IACjC,SAAC,IAAD,CAAQD,GAAIP,QAEd,UAAC,IAAD,CACEuC,KAAK,QACLC,KAAK,gDACLC,OAAO,SACPC,IAAI,WACJnB,QAAQ,WACRhB,GAAI,CAAEN,GAAI,GANZ,UAQGyB,EAAAA,GAAAA,eAAgClB,GAChCL,YAMP,SAAC,IAAD","sources":["pages/ProjectPage.tsx"],"sourcesContent":["import GitHub from \"@mui/icons-material/GitHub\";\nimport Masonry from \"@mui/lab/Masonry\";\nimport { Container, SxProps } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport LoadingError from \"../components/LoadingError\";\nimport Project from \"../components/Project\";\nimport type {\n  Project as ProjectType,\n  StrapiObject,\n} from \"../features/fetchAPI\";\nimport getAPI from \"../features/fetchAPI\";\nimport type { Locale } from \"../features/languages\";\nimport { localizedStrings } from \"../features/languages\";\nimport { ReactComponent as GitLabIcon } from \"../icons/gitlab.svg\";\n\nconst iconSx: SxProps = {\n  ml: 0.5,\n  fontSize: 20,\n};\n\nconst GitLab = <SvgIcon component={GitLabIcon} inheritViewBox sx={iconSx} />;\n\ntype Props = React.PropsWithoutRef<{\n  locale: Locale;\n  sx?: SxProps;\n}>;\n\nfunction Projects({ locale, sx }: Props) {\n  const [projects, setProjects] = React.useState<\n    StrapiObject<ProjectType>[] | null | undefined\n  >(undefined);\n\n  React.useEffect(() => {\n    (async () => {\n      try {\n        const { data } = await getAPI(\"projects\", locale, {\n          populate: [\"languages\", \"technologies\", \"git\", \"image\"],\n        });\n\n        if (data.length) {\n          data.reverse();\n          setProjects(data);\n        } else {\n          throw new Error(\"No Data\");\n        }\n      } catch (error) {\n        setProjects(null);\n      }\n    })();\n  }, [locale]);\n\n  return (\n    <Box\n      sx={{\n        ...sx,\n        overflow: \"auto\",\n        justifyContent: projects ? undefined : \"center\",\n      }}\n      className=\"mandatory-scroll-container\"\n    >\n      <Container>\n        {projects === undefined ? (\n          // Loading\n          <CircularProgress sx={{ alignSelf: \"center\" }} />\n        ) : projects ? (\n          // Projects\n          <>\n            <Typography\n              variant=\"h2\"\n              component=\"h1\"\n              sx={{ textAlign: \"center\", mt: 3 }}\n            >\n              {localizedStrings.projects[locale]}\n            </Typography>\n            <Box sx={{ marginTop: 1, marginBottom: 2 }}>\n              <Masonry\n                columns={{\n                  xs: 1,\n                  sm: 2,\n                  md: 2,\n                }}\n                spacing={2}\n              >\n                {projects.map((p) => (\n                  <Box key={p.id}>\n                    <Project\n                      data={p.attributes}\n                      locale={locale}\n                      featured={p.attributes.featured}\n                    />\n                  </Box>\n                ))}\n              </Masonry>\n            </Box>\n            {/* GitHub button */}\n            <Box>\n              <Button\n                size=\"large\"\n                href=\"https://github.com/oxypomme?tab=repositories\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                variant=\"outlined\"\n              >\n                {localizedStrings.githubProjects[locale]}\n                <GitHub sx={iconSx} />\n              </Button>\n              <Button\n                size=\"large\"\n                href=\"https://gitlab.com/users/oxypomme/contributed\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                variant=\"outlined\"\n                sx={{ ml: 2 }}\n              >\n                {localizedStrings.gitlabProjects[locale]}\n                {GitLab}\n              </Button>\n            </Box>\n          </>\n        ) : (\n          // Error\n          <LoadingError />\n        )}\n      </Container>\n    </Box>\n  );\n}\n\nexport default Projects;\n"],"names":["iconSx","ml","fontSize","GitLab","component","GitLabIcon","inheritViewBox","sx","locale","React","undefined","projects","setProjects","getAPI","populate","data","length","reverse","Error","overflow","justifyContent","className","alignSelf","variant","textAlign","mt","localizedStrings","marginTop","marginBottom","columns","xs","sm","md","spacing","map","p","attributes","featured","id","size","href","target","rel"],"sourceRoot":""}